// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * CheckNotificationAuthorization checks current permission status
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function CheckNotificationAuthorization() {
    let $resultPromise = /** @type {any} */($Call.ByID(2789931702));
    return $resultPromise;
}

/**
 * RegisterNotificationCategory registers a category with actions and optional reply field
 * @param {$models.NotificationCategory} category
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RegisterNotificationCategory(category) {
    let $resultPromise = /** @type {any} */($Call.ByID(2679064664, category));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RemoveAllDeliveredNotifications() {
    let $resultPromise = /** @type {any} */($Call.ByID(384520397));
    return $resultPromise;
}

/**
 * RemoveAllPendingNotifications removes all pending notifications
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RemoveAllPendingNotifications() {
    let $resultPromise = /** @type {any} */($Call.ByID(1423986276));
    return $resultPromise;
}

/**
 * @param {string} identifier
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RemoveDeliveredNotification(identifier) {
    let $resultPromise = /** @type {any} */($Call.ByID(149440045, identifier));
    return $resultPromise;
}

/**
 * RemovePendingNotification removes a specific pending notification
 * @param {string} identifier
 * @returns {Promise<void> & { cancel(): void }}
 */
export function RemovePendingNotification(identifier) {
    let $resultPromise = /** @type {any} */($Call.ByID(3872412470, identifier));
    return $resultPromise;
}

/**
 * RequestUserNotificationAuthorization requests permission for notifications.
 * @returns {Promise<boolean> & { cancel(): void }}
 */
export function RequestUserNotificationAuthorization() {
    let $resultPromise = /** @type {any} */($Call.ByID(3412125712));
    return $resultPromise;
}

/**
 * SendNotification sends a notification with the given identifier, title, subtitle, and body.
 * @param {string} identifier
 * @param {string} title
 * @param {string} subtitle
 * @param {string} body
 * @returns {Promise<void> & { cancel(): void }}
 */
export function SendNotification(identifier, title, subtitle, body) {
    let $resultPromise = /** @type {any} */($Call.ByID(2246903123, identifier, title, subtitle, body));
    return $resultPromise;
}

/**
 * SendNotificationWithActions sends a notification with the specified actions
 * @param {$models.NotificationOptions} options
 * @returns {Promise<void> & { cancel(): void }}
 */
export function SendNotificationWithActions(options) {
    let $resultPromise = /** @type {any} */($Call.ByID(1615199806, options));
    return $resultPromise;
}
